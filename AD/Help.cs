using System;
using System.Collections.Generic;
using System.Text;

namespace AD
{
    class Help
    {
        internal static void help(int number)
        {
            try
            {
                switch (number)
                {
                    case 1:
                        Console.WriteLine("1 Получение списка пользователей домена\n" +
                                          "Все настройки берутся из файла config.ini\n" +
                                          "путь в каталог LDAP где ищем пользователей \tSearchUsersIn=\n" +
                                          "название файла где сохраняем найденных пользователей\tUsersList=\n" +
                                          "название файла где сохраняем новых пользователей\tNewUsersList=\n" +
                                          "название файла где сохраняем пользователей не найденных в UsersList\tLastUsersList=\n" +
                                          "после отработки приложения создается файл со списком пользователей с путем в LDAP\n" +
                                          "если файл уже существует то он сравнивается с реальным списком\n" +
                                          "если есть изменения то он перезаписывается,\n" +
                                          "те пользователи которые не были найдены в сохраненном списке добавляются в NewUsersList\n" +
                                          "те пользователи которые не были найдены в LDAP сохраняются в LastUsersList\n");
                        Console.ReadKey();
                        Menu.MainMenu();
                        break;
                    case 2:
                        Console.WriteLine(
                            "2 Создание структуры файлов и папок пользователей\n"+
                            "Приложение получает из файла UsersList список текущих пользоваетелей\n" +
                            "затем в директории PathUsersDirectory создаем директории с именами пользователей \n" +
                            "и в каждую из них копируем каталог из PathTemplateDirectory\n"+
                            "Права на папки указываем в ключе\tPermission= дальнейшие инструкции пишем через =\n" +
                            "1\tУказываем папку с путем, где корень это создаваемые папки\n" +
                            "2\tПользователь или группа на которую распространяются данные права %user% - это пользователь папки\n" +
                            "3\tСами права RO - права на чтение, RW - полные права\n");
                        Console.ReadKey();
                        Menu.MainMenu();
                        break;
                    case 3:
                        Console.WriteLine(
                            "3 Принудительная запись разрешений\n" +
                            "Надо понимать что установка разрешений на заполненные папки будет весьма долгая\n" +
                            "Сами папки при установке разрешений не создаются, и установленные разрешения не удаляются\n" +
                            "а папки на которые разрешения ставятся берутся из списка сохраненного в \tUsersList=\n" +
                            "Права на папки указываем в ключе\tPermission= дальнейшие инструкции пишем через =\n" +
                            "1\tУказываем папку с путем, где корень это создаваемые папки\n"+
                            "2\tПользователь или группа на которую распространяются данные права %user% - это пользователь папки\n" +
                            "3\tСами права RO - права на чтение, RW - полные права\n");
                        Console.ReadKey();
                        Menu.MainMenu();
                        break;
                    case 4:
                        Console.WriteLine(
                            "4 Создание ярлыков на папки\n" +
                            "1\tСсылка на папку где нужно сделать ярлыки на подпапки\tPathForLinks=\n (указываем полный путь)" +
                            "2\tСсылка на папку где нужно разместить сделанные ярлыки\tLinkSDirectory=\n");
                        Console.ReadKey();
                        Menu.MainMenu();
                        break;
                    case 5:
                        Console.WriteLine(
                            "5 - Запуск приложений\n" +
                            "Осуществляем запуск и перезапуск приложений, которые должны постоянно работать, но периодически виснут\n" +
                            "ссылки на приложение берутся в ключе\tRun=\n"+
                            "вначале килится процесс с этим приложением, а затем оно снова запускается\n");
                        break;
                    case 0:
                        Menu.MainMenu();
                        break;
                    default:
                        Console.WriteLine("Ваш выбор не распознан. Попробуйте еще раз");
                        break;
                }
            }
            catch (Exception e)
            {
                Log.Exception(e.Message);
            }
        }
    }
}
